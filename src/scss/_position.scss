@use 'variables' as v;

@mixin tooltip-hover {
  &:hover::before,
  &:hover::after,
  &.has-tooltip-active::before,
  &.has-tooltip-active::after {
    @content;
  }
}

@mixin vertical-positioned-tooltip($propertyY, $rotation, $transitionDirection, $xDirection: 0) {
  &.has-tooltip-arrow {
    &::before {
      // Position arrow inside and apply rotation
      margin-#{$propertyY}: calc(v.$tooltip-arrow-size * -1 + 1px);
      transform: rotate(#{$rotation});
    }

    &::before,
    &::after {
      #{$propertyY}: 100%;
      left: 50%;
    }

    &::before {
      left: calc(50% - v.$tooltip-arrow-size);
    }

    &::after {
      transform: translateX(
        $xDirection == -1 ? -100% : $xDirection == 1 ? 0 : -50%
      );

      @if $xDirection != 0 {
        margin-left: calc(-$xDirection * v.$tooltip-offset-x);
      }
    }

    &:hover {
      @include set-margin("translateY", $transitionDirection);
    }
  }
}

@mixin horizontal-positioned-tooltip($propertyX, $rotation, $transitionDirection) {
  &.has-tooltip-arrow {
    &::before {
      margin-#{$propertyX}: calc(v.$tooltip-arrow-size * -1 + 1px);
      transform: rotate(#{$rotation});
    }

    &::before,
    &::after {
      #{$propertyX}: 100%;
      bottom: 50%;
    }

    &::after {
      margin-bottom: calc(v.$tooltip-height / -2);
    }

    &:hover {
      @include set-margin("translateX", $transitionDirection);
    }
  }
}

// Top Tooltip
.tooltip-top {
  --rotation: 135deg;
  @include vertical-positioned-tooltip("bottom", var(--rotation), -1);
}

// Bottom Tooltip
.tooltip-bottom {
  --rotation: -45deg;
  @include vertical-positioned-tooltip("top", var(--rotation), 1);
}

// Left Tooltip
.tooltip-left {
  --rotation: 45deg;
  @include horizontal-positioned-tooltip("right", var(--rotation), -1);
}

// Right Tooltip
.tooltip-right {
  --rotation: -135deg;
  @include horizontal-positioned-tooltip("left", var(--rotation), 1);
}
